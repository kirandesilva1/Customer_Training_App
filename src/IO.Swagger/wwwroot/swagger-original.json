{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is sample customer api",
    "version" : "1.0.0",
    "title" : "Customer API"
  },
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "customer",
    "description" : "to create and get customer info"
  }, {
    "name" : "order",
    "description" : "to get order info"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/order" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Create Order",
        "description" : "This is used to create an order",
        "operationId" : "createOrder",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created order object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Order"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "order" ],
        "summary" : "Update existing order",
        "description" : "",
        "operationId" : "updateOrder",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Order object that needs to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Order"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "order" ],
        "summary" : "Deletes an order",
        "description" : "",
        "operationId" : "deleteOrder",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order id to delete",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      }
    },
    "/customerorders/{customerid}" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Get customer Orders",
        "description" : "This is used to get a customers orders",
        "operationId" : "getOrders",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "description" : "The customer orders that needs to be fetched.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "400" : {
            "description" : "Invalid customer id supplied"
          },
          "404" : {
            "description" : "Customer orders not found"
          }
        }
      }
    },
    "/customer" : {
      "post" : {
        "tags" : [ "customer" ],
        "summary" : "Create customer",
        "description" : "This is used to create a customer",
        "operationId" : "createCustomer",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created customer object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "customer" ],
        "summary" : "Update existing customer",
        "description" : "",
        "operationId" : "updateCustomer",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Customer object that needs to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Customer not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "customer" ],
        "summary" : "Deletes a customer",
        "description" : "",
        "operationId" : "deleteCustomer",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer id to delete",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Customer not found"
          }
        }
      }
    },
    "/customer/{customerid}" : {
      "get" : {
        "tags" : [ "customer" ],
        "summary" : "Get Customer info",
        "description" : "",
        "operationId" : "getCustomerInfo",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "description" : "The customerid that needs to be fetched.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          },
          "400" : {
            "description" : "Invalid customer id supplied"
          },
          "404" : {
            "description" : "Customer not found"
          }
        }
      }
    }
  },
  "definitions" : {
    "Customer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : ""
        },
        "name" : {
          "type" : "string"
        },
        "groupid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberoforders" : {
          "type" : "integer",
          "format" : "int32"
        },
        "address" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        }
      },
      "xml" : {
        "name" : "Customer"
      },
      "example" : {
        "address" : [ {
          "zipcode" : "zipcode",
          "streetname" : "streetname"
        }, {
          "zipcode" : "zipcode",
          "streetname" : "streetname"
        } ],
        "groupid" : 6,
        "name" : "name",
        "id" : "id",
        "numberoforders" : 1
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "streetname" : {
          "type" : "string"
        },
        "zipcode" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Address"
      },
      "example" : {
        "zipcode" : "zipcode",
        "streetname" : "streetname"
      }
    },
    "Order" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "shipaddress" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "ordercount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Customer"
          }
        }
      },
      "example" : {
        "shipaddress" : [ {
          "zipcode" : "zipcode",
          "streetname" : "streetname"
        }, {
          "zipcode" : "zipcode",
          "streetname" : "streetname"
        } ],
        "description" : "description",
        "ordercount" : 0,
        "customer" : [ {
          "address" : [ {
            "zipcode" : "zipcode",
            "streetname" : "streetname"
          }, {
            "zipcode" : "zipcode",
            "streetname" : "streetname"
          } ],
          "groupid" : 6,
          "name" : "name",
          "id" : "id",
          "numberoforders" : 1
        }, {
          "address" : [ {
            "zipcode" : "zipcode",
            "streetname" : "streetname"
          }, {
            "zipcode" : "zipcode",
            "streetname" : "streetname"
          } ],
          "groupid" : 6,
          "name" : "name",
          "id" : "id",
          "numberoforders" : 1
        } ]
      }
    }
  }
}
